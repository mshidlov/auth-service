// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  id        BigInt   @id @default(autoincrement())
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user[]
  role      role[]
}

model user {
  id               BigInt           @id @default(autoincrement())
  username         String           @unique
  firstName        String?
  lastName         String?
  isVerified       Boolean          @default(false)
  isBlocked        Boolean          @default(false)
  isDeleted        Boolean          @default(false)
  accountId        BigInt
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  password         password?
  account          account          @relation(fields: [accountId], references: [id])
  refreshToken     refresh_token?
  userRole         user_role[]
  third_party_auth single_sign_on[]
  user_email       user_email[]
}

model user_email {
  id         BigInt   @id @default(autoincrement())
  userId     BigInt
  email      String
  isVerified Boolean  @default(false)
  isPrimary  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       user     @relation(fields: [userId], references: [id])

  @@unique([email])
}

model single_sign_on {
  id        BigInt                @id @default(autoincrement())
  userId    BigInt
  origin    single_sign_on_origin
  originId  String
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  user      user                  @relation(fields: [userId], references: [id])

  @@unique([origin, originId])
  @@unique([origin, userId])
}

enum single_sign_on_origin {
  GOOGLE
  MICROSOFT
  FACEBOOK
  TWITTER
  GITHUB
}

model refresh_token {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt   @unique
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user     @relation(fields: [userId], references: [id])
}

model password {
  id            BigInt   @id @default(autoincrement())
  userId        BigInt   @unique
  salt          String
  iterations    Int
  password      String
  pepperVersion String   @default("1")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          user     @relation(fields: [userId], references: [id])
}

model password_history {
  id             BigInt   @id @default(autoincrement())
  userId         BigInt
  salt           String
  saltIterations Int
  password       String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model role {
  id              BigInt            @id @default(autoincrement())
  accountId       BigInt
  name            String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  account         account           @relation(fields: [accountId], references: [id])
  userRole        user_role[]
  rolePermissions role_permission[]
}

model user_role {
  id        BigInt   @id @default(autoincrement())
  userId    BigInt
  roleId    BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user     @relation(fields: [userId], references: [id])
  role      role     @relation(fields: [roleId], references: [id])
}

model permission {
  id              BigInt            @id @default(autoincrement())
  name            String
  resource        String
  privilege       privilege
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  rolePermissions role_permission[]
}

model role_permission {
  id           BigInt     @id @default(autoincrement())
  roleId       BigInt
  permissionId BigInt
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  role         role       @relation(fields: [roleId], references: [id])
  permission   permission @relation(fields: [permissionId], references: [id])
}

enum privilege {
  C
  R
  U
  D
}
